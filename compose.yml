services:
  proxy:
    image: nginx:1.25-alpine-slim
    ports:
      - 8780:80
    volumes: 
      - ./static:/usr/share/nginx/html:ro
      - ./corpora:/usr/share/nginx/static/corpora:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    healthcheck:
      test: ["CMD-SHELL", "wget -nv -t1 --spider http://localhost || exit 1"]
    restart: always      

  regex:
    build:
      context: ./code
      dockerfile: Dockerfile-regex
    # ports:
    #   - 8781:7861
    volumes:
      - ./code/alphabet.tsv:/alphabet.tsv:ro
      - ./corpora:/corpora:ro
      # - ./code:/home/app
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "python -c \"from urllib.request import urlopen; int(urlopen('http://localhost:7861/regex/').status >= 400)\""]

  ngram:
    build:
      context: ./code
      dockerfile: Dockerfile-ngram
    # ports:
    #   - 8782:7861
    volumes:
      - ./corpora:/corpora:ro
      # - ./code:/home/app
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "python -c \"from urllib.request import urlopen; int(urlopen('http://localhost:7861/ngram/').status >= 400)\""]

  db:
    image: pgvector/pgvector:pg17
    environment:
      - POSTGRES_DB=bogoslov
      - POSTGRES_USER=bogoslov
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - 5732:5432
    volumes: 
      - ./db/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d bogoslov -U bogoslov"]
    restart: always      
